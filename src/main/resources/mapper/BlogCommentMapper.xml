<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.BlogCommentMapper">
  <resultMap id="BaseResultMap" type="com.blog.entity.pojo.BlogComment">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.entity.pojo.BlogComment">
    <result column="comment_content" jdbcType="LONGVARCHAR" property="commentContent" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, user_id, article_id, create_time, is_delete
  </sql>
  <sql id="Blob_Column_List">
    comment_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
    <select id="selectBlogCommentByArticleId" parameterType="java.lang.Integer" resultType="com.blog.entity.vo.BlogCommentVo">
        SELECT
            comment_id,
            user_id,
            article_id,
            create_time,
            is_delete,
            comment_content
        FROM
            blog_comment
        WHERE
            is_delete = 0 and
            article_id = #{articleId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.entity.pojo.BlogComment">
    insert into blog_comment (comment_id, user_id, article_id, 
      create_time, is_delete, comment_content
      )
    values (#{commentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}, #{commentContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.entity.pojo.BlogComment">
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
    <insert id="insertComment" useGeneratedKeys="true" keyProperty="commentId" keyColumn="comment_id">
        insert into blog_comment(comment_content,user_id,article_id)
        values (#{commentContent},#{userId},#{articleId})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.blog.entity.pojo.BlogComment">
    update blog_comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.entity.pojo.BlogComment">
    update blog_comment
    set user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      comment_content = #{commentContent,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.entity.pojo.BlogComment">
    update blog_comment
    set user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>